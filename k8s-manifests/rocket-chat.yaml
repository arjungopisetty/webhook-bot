apiVersion: v1
kind: Service
metadata:
  name: rocket-chat
  namespace: default
spec:
  selector:
    app: rocket-chat
  type: ClusterIP
  ports:
    - name: rocket-chat
      protocol: TCP
      port: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocket-chat
  namespace: default
  labels:
    app: rocket-chat
spec:
  selector:
    matchLabels:
      app: rocket-chat
  replicas: 1
  template:
    metadata:
      labels:
        app: rocket-chat
    spec:
      containers:
        - name: rocket-chat
          image: rocket.chat:4.6.2
          livenessProbe:
            httpGet:
              path: /api/info
              port: nodejs
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/info
              port: nodejs
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 10
          ports:
            - containerPort: 3000
              name: nodejs
          env:
            - name: ROOT_URL
              value: http://rocket-chat.default.svc.cluster.local
            - name: MONGO_OPLOG_URL
              value: "mongodb://mongo:27017/local"
            - name: MONGO_URL
              value: "mongodb://mongo:27017"
            - name: ADMIN_USERNAME
              value: admin
            - name: ADMIN_NAME
              value: admin
            - name: ADMIN_PASS
              value: password
            - name: ADMIN_EMAIL
              value: admin@example.com
          volumeMounts:
            - name: rocket-data
              mountPath: /app/uploads
            - name: tmp
              mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      - name: rocket-data
        emptyDir: {}
